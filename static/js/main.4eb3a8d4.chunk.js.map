{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/store.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/App.jsx","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/App.module.css"],"names":["module","exports","initialState","contacts","id","name","number","filtered","store","createStore","state","type","payload","find","item","alert","filter","contact","connect","dispatch","addContact","uuidv4","useState","setName","setNumber","nameInputId","numberInputId","handleFormChange","e","currentTarget","value","formReset","className","css","container","form","onSubmit","preventDefault","label","htmlFor","placeholder","pattern","title","required","onChange","input","btn","changeFilter","ContactItem","onDeleteBtnPush","listItem","contactIcon","btnDelete","onClick","deleteContact","filteredContacts","toLowerCase","includes","contactsList","map","App","icon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eb3a8d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3SYRe\",\"input\":\"Filter_input__N4Cy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__xOjfZ\",\"contactsList\":\"ContactList_contactsList__g5Udv\",\"listItem\":\"ContactList_listItem__2nUmU\",\"contactIcon\":\"ContactList_contactIcon__39JxE\",\"number\":\"ContactList_number__1ctlU\",\"btnDelete\":\"ContactList_btnDelete__2NdG9\"};","import { createStore } from 'redux';\n\nconst initialState = {\n  contacts: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  filtered: '',\n};\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'contacts/addContact':\n      if (state.contacts.find(item => item.name === payload.name)) {\n        alert(`${payload.name + ' is already in contacts'}`);\n\n        return state;\n      }\n      // return { contacts: [...state.contacts, payload] };\n      return {\n        ...state,\n        contacts: [...state.contacts, payload],\n      };\n\n    case 'contacts/delete':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== payload),\n      };\n\n    case 'contacts/filter':\n      return {\n        ...state,\n        filtered: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nexport default store;\n// import { contactsReducer } from './contacts/contacts-reducer';\n\n// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: 'filter',\n// };\n\n// export const store = configureStore({\n//   reducer: {\n//     contacts: persistReducer(contactsPersistConfig, contactsReducer),\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === 'development',\n// });\n\n// export const persistor = persistStore(store);\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport css from './ContactForm.module.css';\n\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\n\nconst ContactForm = ({ contacts, addContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // console.log('ContactForm contacts: ', contacts);\n  // console.log('ContactForm onSubmit: ', addContact);\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleFormChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    addContact(name, number);\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.container}>\n      <form className={css.form} onSubmit={handleOnSubmit}>\n        <label className={css.label} htmlFor={nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Mark Zuckerberg\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleFormChange}\n            className={css.input}\n            id={nameInputId}\n          />\n        </label>\n\n        <label className={css.label} htmlFor={numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            placeholder=\"xxx-xx-xx\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleFormChange}\n            className={css.input}\n            id={numberInputId}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  onSubmit: PropTypes.func,\n};\n\nconst mapStateToProps = ({ contacts }) => {\n  return {\n    contacts: contacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: (name, number) => dispatch(addContact(name, number)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","// import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = (name, number) => ({\n  type: 'contacts/addContact',\n  payload: {\n    id: uuidv4(),\n    name: name,\n    number: number,\n  },\n});\n\nexport const deleteContact = id => ({\n  type: 'contacts/delete',\n  payload: id,\n});\n\nexport const changeFilter = value => ({\n  type: 'contacts/filter',\n  payload: value,\n});\n\n// export const addContact = createAction(\n//   'contacts/addContact',\n//   (name, number) => ({\n//     payload: {\n//       id: uuidv4(),\n//       name: name,\n//       number: number,\n//     },\n//   }),\n// );\n\n// export const deleteContact = createAction('contacts/delete');\n// export const changeFilter = createAction('contacts/filter');\n","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ filtered, changeFilter }) => {\n  // console.log('filteredContact: ', [filteredContact]);\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Search by name</h2>\n\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={filtered}\n        onChange={e => changeFilter(e.currentTarget.value)}\n        className={css.input}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nconst mapStateToProps = ({ filtered }) => {\n  return {\n    filtered,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeFilter: value => dispatch(changeFilter(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { IoIosContact } from 'react-icons/io';\nimport { AiFillPhone } from 'react-icons/ai';\n\nexport const ContactItem = ({ id, name, number, onDeleteBtnPush }) => {\n  return (\n    <li className={css.listItem} key={id}>\n      <p className={css.name}>\n        <IoIosContact className={css.contactIcon} />\n        {name}:\n      </p>\n      <p className={css.number}>\n        <AiFillPhone className={css.contactIcon} />\n        {number}\n      </p>\n      <button\n        type=\"button\"\n        className={css.btnDelete}\n        onClick={() => onDeleteBtnPush(id)}\n      >\n        <FaTrashAlt />\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteBtnPush: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { ContactItem } from './ContactItem';\n\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\n// import store from '../../redux/store';\n\nconst ContactList = ({ contacts, filtered, deleteContact }) => {\n  // console.log('STATE ---> ', store.getState());\n\n  const filteredContacts = contacts.filter(item =>\n    item.name.toLowerCase().includes(filtered.toLowerCase()),\n  );\n\n  return (\n    <div className={css.container}>\n      <ul className={css.contactsList}>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onDeleteBtnPush={deleteContact}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteBtnPush: PropTypes.func,\n};\n\nconst mapStateToProps = ({ contacts, filtered }) => {\n  return {\n    contacts,\n    filtered,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteContact: id => dispatch(deleteContact(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// import { useState, useEffect } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport css from './App.module.css';\nimport { RiContactsBook2Fill } from 'react-icons/ri';\nimport { IoMdContacts } from 'react-icons/io';\n\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nconst App = () => {\n  // console.log(addContact);\n  // const [contacts, setContact] = useState(() => {\n  //   // ленивая инициализация состояния - lazy initialization\n  //   return JSON.parse(window.localStorage.getItem('contacts' ?? ''));\n  // });\n  // const [filtered, setFiltered] = useState('');\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>\n        Phonebook <RiContactsBook2Fill className={css.icon} />\n      </h1>\n      <ContactForm />\n\n      <Filter />\n      <h2 className={css.title}>\n        Contacts\n        <IoMdContacts className={css.icon} />\n      </h2>\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\n// console.log('STATE ---> ', store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__gRIsP\",\"form\":\"ContactForm_form__1Xyki\",\"label\":\"ContactForm_label__1uqc7\",\"input\":\"ContactForm_input__3Eq0w\",\"btn\":\"ContactForm_btn__1zSaF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3PDox\",\"title\":\"App_title__2Al-S\",\"icon\":\"App_icon__1-aEy\"};"],"sourceRoot":""}